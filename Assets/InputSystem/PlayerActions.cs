//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/InputSystem/PlayerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerActions"",
    ""maps"": [
        {
            ""name"": ""WorldGameplay"",
            ""id"": ""d56e2fd9-6ff5-42be-840b-b58014784987"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""cab62e3d-31c7-4f61-9bdb-dc580a3feead"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""c3173ca8-4560-4067-989f-f3980e4bbfda"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RunStart"",
                    ""type"": ""PassThrough"",
                    ""id"": ""cc2abb0f-d687-4af4-b37c-69fed7dc0fd7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RunFinish"",
                    ""type"": ""Button"",
                    ""id"": ""c69b80bf-e57e-4ea9-b5bc-ae41e5297327"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""c199d5c7-372c-43ce-9249-51419107da70"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""KeyboardMove"",
                    ""id"": ""ee991986-3a8e-4977-80a2-36f54fd8b159"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a4d00ab1-717d-49ed-a2a4-79e5dd5764e5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2751737b-e92f-4ba1-861b-390c2faaec07"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7f420022-ba2c-40c7-af57-c1a9de4fff86"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b4c04277-8da5-4e92-b993-5a5dece09688"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""GamepadMove"",
                    ""id"": ""1229e80d-1127-40ea-a28a-8c614a1cd4c3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d269750f-269b-4259-91ad-8da14cc134c8"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0b532b55-1854-4331-914d-08cb382e4136"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a0c7c8b0-3686-4f04-8dce-4271824a9420"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9f1d642b-424e-4944-bba6-f04c3389936e"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6de6910e-eb8d-49fa-9dde-d20d5627a910"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55abda69-bc59-4c99-a04d-7f80dceb41c9"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce082843-ec23-4d47-ab76-683479fbf1ea"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RunStart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f093e82-653e-4c2a-9cd5-e26ed8e3ffb6"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RunStart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""25f747ff-f002-4aec-aa29-3abe09d47c65"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RunFinish"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40311a0d-dd1c-409f-a10f-c8fb53554a13"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RunFinish"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6cbdc66f-1b33-4244-9efa-6ac24899a1bc"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e37a972b-c914-44b1-a7d2-ce7937ca8968"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CameraActions"",
            ""id"": ""57a5c53b-dfde-407b-8bff-c8bbb4995022"",
            ""actions"": [
                {
                    ""name"": ""CameraRotation"",
                    ""type"": ""Value"",
                    ""id"": ""798ff5a3-e008-4ce5-9577-d9fec7760785"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraZoom"",
                    ""type"": ""Value"",
                    ""id"": ""ab33e784-7ed6-4c30-92ae-b16c9e6732b3"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""ControllerRotate"",
                    ""id"": ""1ccd78db-1835-464b-ae6e-b59b8f386b92"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""8ca25b1c-1b39-43f6-a05e-edc21d479346"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b96f7548-de83-4aa1-ac56-cc0526214e81"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""KeyboardRotate"",
                    ""id"": ""a995cb06-5c65-406b-8ca6-c66db1a0d137"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""06973fd6-6355-40e9-a5c1-75e5b0609c25"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""83f4501d-8e73-493d-b15d-2e4e8496790e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ControllerZoom"",
                    ""id"": ""eec85103-7f8d-4d14-bf34-dcca8c02df1b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c9a1f63d-dcb8-4738-8b8e-9030d296cad9"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a2bb11b0-be29-4058-ab52-554b1a479ad2"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""KeyboardZoom"",
                    ""id"": ""676fc8e9-74d0-4ef6-a47c-17fb8acb578a"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""79f1d034-25e0-4a28-9e8d-cbd9bddee0f2"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(max=1)"",
                    ""groups"": """",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""28ed4497-922e-4390-93e0-f0626a332e52"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(max=1)"",
                    ""groups"": """",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // WorldGameplay
        m_WorldGameplay = asset.FindActionMap("WorldGameplay", throwIfNotFound: true);
        m_WorldGameplay_Jump = m_WorldGameplay.FindAction("Jump", throwIfNotFound: true);
        m_WorldGameplay_Movement = m_WorldGameplay.FindAction("Movement", throwIfNotFound: true);
        m_WorldGameplay_RunStart = m_WorldGameplay.FindAction("RunStart", throwIfNotFound: true);
        m_WorldGameplay_RunFinish = m_WorldGameplay.FindAction("RunFinish", throwIfNotFound: true);
        m_WorldGameplay_Interact = m_WorldGameplay.FindAction("Interact", throwIfNotFound: true);
        // CameraActions
        m_CameraActions = asset.FindActionMap("CameraActions", throwIfNotFound: true);
        m_CameraActions_CameraRotation = m_CameraActions.FindAction("CameraRotation", throwIfNotFound: true);
        m_CameraActions_CameraZoom = m_CameraActions.FindAction("CameraZoom", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // WorldGameplay
    private readonly InputActionMap m_WorldGameplay;
    private IWorldGameplayActions m_WorldGameplayActionsCallbackInterface;
    private readonly InputAction m_WorldGameplay_Jump;
    private readonly InputAction m_WorldGameplay_Movement;
    private readonly InputAction m_WorldGameplay_RunStart;
    private readonly InputAction m_WorldGameplay_RunFinish;
    private readonly InputAction m_WorldGameplay_Interact;
    public struct WorldGameplayActions
    {
        private @PlayerActions m_Wrapper;
        public WorldGameplayActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_WorldGameplay_Jump;
        public InputAction @Movement => m_Wrapper.m_WorldGameplay_Movement;
        public InputAction @RunStart => m_Wrapper.m_WorldGameplay_RunStart;
        public InputAction @RunFinish => m_Wrapper.m_WorldGameplay_RunFinish;
        public InputAction @Interact => m_Wrapper.m_WorldGameplay_Interact;
        public InputActionMap Get() { return m_Wrapper.m_WorldGameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WorldGameplayActions set) { return set.Get(); }
        public void SetCallbacks(IWorldGameplayActions instance)
        {
            if (m_Wrapper.m_WorldGameplayActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnJump;
                @Movement.started -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnMovement;
                @RunStart.started -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnRunStart;
                @RunStart.performed -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnRunStart;
                @RunStart.canceled -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnRunStart;
                @RunFinish.started -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnRunFinish;
                @RunFinish.performed -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnRunFinish;
                @RunFinish.canceled -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnRunFinish;
                @Interact.started -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_WorldGameplayActionsCallbackInterface.OnInteract;
            }
            m_Wrapper.m_WorldGameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @RunStart.started += instance.OnRunStart;
                @RunStart.performed += instance.OnRunStart;
                @RunStart.canceled += instance.OnRunStart;
                @RunFinish.started += instance.OnRunFinish;
                @RunFinish.performed += instance.OnRunFinish;
                @RunFinish.canceled += instance.OnRunFinish;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
            }
        }
    }
    public WorldGameplayActions @WorldGameplay => new WorldGameplayActions(this);

    // CameraActions
    private readonly InputActionMap m_CameraActions;
    private ICameraActionsActions m_CameraActionsActionsCallbackInterface;
    private readonly InputAction m_CameraActions_CameraRotation;
    private readonly InputAction m_CameraActions_CameraZoom;
    public struct CameraActionsActions
    {
        private @PlayerActions m_Wrapper;
        public CameraActionsActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraRotation => m_Wrapper.m_CameraActions_CameraRotation;
        public InputAction @CameraZoom => m_Wrapper.m_CameraActions_CameraZoom;
        public InputActionMap Get() { return m_Wrapper.m_CameraActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActionsActions set) { return set.Get(); }
        public void SetCallbacks(ICameraActionsActions instance)
        {
            if (m_Wrapper.m_CameraActionsActionsCallbackInterface != null)
            {
                @CameraRotation.started -= m_Wrapper.m_CameraActionsActionsCallbackInterface.OnCameraRotation;
                @CameraRotation.performed -= m_Wrapper.m_CameraActionsActionsCallbackInterface.OnCameraRotation;
                @CameraRotation.canceled -= m_Wrapper.m_CameraActionsActionsCallbackInterface.OnCameraRotation;
                @CameraZoom.started -= m_Wrapper.m_CameraActionsActionsCallbackInterface.OnCameraZoom;
                @CameraZoom.performed -= m_Wrapper.m_CameraActionsActionsCallbackInterface.OnCameraZoom;
                @CameraZoom.canceled -= m_Wrapper.m_CameraActionsActionsCallbackInterface.OnCameraZoom;
            }
            m_Wrapper.m_CameraActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CameraRotation.started += instance.OnCameraRotation;
                @CameraRotation.performed += instance.OnCameraRotation;
                @CameraRotation.canceled += instance.OnCameraRotation;
                @CameraZoom.started += instance.OnCameraZoom;
                @CameraZoom.performed += instance.OnCameraZoom;
                @CameraZoom.canceled += instance.OnCameraZoom;
            }
        }
    }
    public CameraActionsActions @CameraActions => new CameraActionsActions(this);
    public interface IWorldGameplayActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnRunStart(InputAction.CallbackContext context);
        void OnRunFinish(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
    public interface ICameraActionsActions
    {
        void OnCameraRotation(InputAction.CallbackContext context);
        void OnCameraZoom(InputAction.CallbackContext context);
    }
}
